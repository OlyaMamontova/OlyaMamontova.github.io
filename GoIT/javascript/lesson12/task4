/* Вызов не чаще чем в N миллисекунд
 Напишите функцию debounce(f, ms), которая возвращает обёртку, которая передаёт вызов f не чаще,
 чем раз в ms миллисекунд.
«Лишние» вызовы игнорируются. Все аргументы и контекст — передаются.
*/

function func(x){
	console.log(x);
}

function debounce(func, time){
	var state = true;
	
	return function(){
		if(!state) return;
		func.apply(this, arguments);
		state = false;
		
		setTimeout(function(){
			state = true;
		}, time);
	};
}

var func1 = debounce(f, 1000);

func1(1);
func1(2);

setTimeout(function(){func1(3)}, 100);
setTimeout(function(){func1(4)}, 1100);
setTimeout(function(){func1(5)}, 1500);
setTimeout(function(){func1(6)}, 1500);